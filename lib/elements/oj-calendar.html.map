{"version":3,"names":[],"mappings":"","sources":["oj-calendar.jade"],"sourcesContent":["link(rel=\"import\" href=\"../bower_components/polymer/polymer.html\")\nlink(rel=\"import\" href=\"../bower_components/iron-ajax/iron-ajax.html\")\n\ndom-module#oj-calendar\n\t// ---------------------------------------------------------------\n\tstyle\n\t\t:stylus\n\t\t\t@import '../css/imports/*'\n\t\t\t@import '../../.factory/node_modules/nib/lib/nib/*'\n\t\t\t:host\n\t\t\t\twidth: 100%\n\t\t\t\tcolor: $oj-violet\n\t\t\t\tdisplay: flex\n\t\t\t\tflex-flow: row wrap\n\t\t\t\tjustify-content: space-around\n\t\t\t\t.cell.header\n\t\t\t\t\tfont-family: $P\n\t\t\t\t\tfont-weight: 700\n\t\t\t\t\tfont-size: 1rem\n\t\t\t\t\tletter-spacing: 0.05em\n\t\t\t\t\ttext-transform: uppercase\n\t\t\t\t\tpadding: .5rem .5rem .5rem 0\n\t\t\t\t\tborder-bottom: 1px solid rgba($oj-violet, .4)\n\t\t\t\t.cell.content\n\t\t\t\t\tpadding: 1rem .5rem 1rem 0\n\t\t\t\t\tborder-bottom: 1px solid rgba($oj-violet, .4)\n\t\t\t\t.cell.when\n\t\t\t\t\tflex-basis: 15%\n\t\t\t\t\tflex-grow: 1\n\t\t\t\t.cell.where\n\t\t\t\t\tflex-basis: 35%\n\t\t\t\t\tflex-grow: 1\n\t\t\t\t.cell.what\n\t\t\t\t\tflex-basis: 50%\n\t\t\t\t\tflex-grow: 1\n\t\t\t\t\t\n\n\t// ---------------------------------------------------------------\n\ttemplate\n\t\t.cell.header.when Kiedy:\n\t\t.cell.header.where Gdzie:\n\t\t.cell.header.what Co:\n\t\ttemplate(is=\"dom-repeat\" items=\"{{calendarEvents}}\")\n\t\t\t.cell.content.when \n\t\t\t\tb {{item.when.day}} \n\t\t\t\tspan {{item.when.weekday}}\n\t\t\t.cell.content.where {{item.where}}\n\t\t\t.cell.content.what {{item.what}}\n\n\n\t// ---------------------------------------------------------------\n\tscript\n\t\t:coffeescript\n\t\t\tPolymer\n\t\t\t\tis: 'oj-calendar'\n\t\t\t\tproperties:\n\t\t\t\t\tapiUrl:\n\t\t\t\t\t\ttype: String\n\t\t\t\t\t\tvalue: 'https://www.googleapis.com/calendar/v3/'\n\t\t\t\t\tlimit: # total limit of events\n\t\t\t\t\t\ttype: Number\n\t\t\t\t\t\tvalue: 10\n\t\t\t\t\tapiKey: \n\t\t\t\t\t\ttype: String\n\t\t\t\t\tcalendarIds: \n\t\t\t\t\t\ttype: Array\n\t\t\t\t\tmaxResults: #limit per calendar\n\t\t\t\t\t\ttype: Number\n\t\t\t\t\t\tvalue: 20\n\t\t\t\t\tshowDays: \n\t\t\t\t\t\ttype: Number\n\t\t\t\t\t\tvalue: 10\n\t\t\t\t\t# Computed:\n\t\t\t\t\toptions:\n\t\t\t\t\t\ttype: Object\n\t\t\t\t\t\tcomputed: 'computeOptions(apiKey, maxResults, showDays)'\n\t\t\t\t\tcalendarUrls:\n\t\t\t\t\t\ttype: String\n\t\t\t\t\t\tcomputed: 'computeCalendarUrls(apiUrl, calendarIds)'\n\t\t\t\t\t# Async:\n\t\t\t\t\tcalendarEvents:\n\t\t\t\t\t\ttype: Array\n\t\t\t\t\t\tvalue: ->\n\t\t\t\t\t\t\treturn []\n\n\n\t\t\t\tcomputeCalendarUrls: (apiUrl, calendarIds)->\n\t\t\t\t\treturn calendarIds.map((calID)->\n\t\t\t\t\t\treturn apiUrl + 'calendars/' + calID + '/events'\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\tcomputeOptions: (apiKey, maxResults, showDays)->\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: apiKey\n\t\t\t\t\t\tmaxResults: maxResults\n\t\t\t\t\t\ttimeMin: moment('2016-01-01T02:07:39+02:00').format()\n\t\t\t\t\t\ttimeMax: moment().add(showDays, 'days').format()\n\t\t\t\t\t\torderBy: 'startTime'\n\t\t\t\t\t\tsingleEvents: true\n\t\t\t\t\t}\n\n\t\t\t\tgetEvents: (calendarUrls, options, limit)->\n\t\t\t\t\t\n\t\t\t\t\taxios.all(\n\t\t\t\t\t\tcalendarUrls.map( (url)->\n\t\t\t\t\t\t\treturn axios.get(url, params: options)\n\t\t\t\t\t\t)\n\t\t\t\t\t) # AT THIS POINT WE HAVE AN ARRAY OF AXIOS RESPONSES\n\t\t\t\t\t.then( (responses)->\n\t\t\t\t\t\treturn responses.map( (response)->\n\t\t\t\t\t\t\treturn response.data.items\n\t\t\t\t\t\t)\n\t\t\t\t\t) # AT THIS POINT WE HAVE A FULL ARRAY OF CALENDARS\n\t\t\t\t\t.then( (calendars)->\n\t\t\t\t\t\treturn calendars.reduce( (prev, current)->\n\t\t\t\t\t\t\tprev.concat(current)\n\t\t\t\t\t\t)\n\t\t\t\t\t) # AT THIS POINT WE HAVE AN ARRAY OF EVENTS\n\t\t\t\t\t.then( (events)->\n\t\t\t\t\t\treturn events.map( (event)->\n\t\t\t\t\t\t\tdateString = event.start.dateTime or event.start.date\n\t\t\t\t\t\t\twhendate = moment(dateString).locale('pl')\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\twhen: \n\t\t\t\t\t\t\t\t\tday: whendate.format('DD.MM')\n\t\t\t\t\t\t\t\t\tweekday: whendate.format('dd')\n\t\t\t\t\t\t\t\twhere: event.organizer.displayName\n\t\t\t\t\t\t\t\twhat: event.summary\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t) # AT THIS POINT WE HAVE AN ARRAY OF TRIMMED EVENTS\n\t\t\t\t\t.then( (events)->\n\t\t\t\t\t\treturn events.sort( (a, b)->\n\t\t\t\t\t\t\treturn (a.when < b.when) ? 1 : (a.when > b.when) ? -1 : 0\n\t\t\t\t\t\t)\n\t\t\t\t\t) # AT THIS POINT WE HAVE A TRIMMED ARRAY OF EVENTS, SORTED BY DATE\n\t\t\t\t\t.then( (events)->\n\t\t\t\t\t\treturn events.slice(0, limit)\n\t\t\t\t\t) # AT THIS POINT WE HAVE A TRIMMED ARRAY OF EVENTS, ORDERED BY DATE, LIMITED BY LIMIT\n\t\t\t\t\t.then( ((events)->\n\t\t\t\t\t\t\tthis.calendarEvents = events\n\t\t\t\t\t\t).bind(this) # REMEMBER: .bind(this)\n\t\t\t\t\t)\n\t\t\t\t\t.catch( (error)->\n\t\t\t\t\t\tconsole.log error\n\t\t\t\t\t)\n\t\t\t\t\t\n\n\t\t\t\tready: ->\n\t\t\t\t\tthis.getEvents(this.calendarUrls, this.options, this.limit)\n\t\t\t\t\treturn\n\t\t\t\t\t\n\t\t\t\tattached: ->\n\t\t\t\t\treturn\n\n\t\t\t\tdetached: ->\n\t\t\t\t\treturn\n\n\n\t\t\t\t_checkDeps: ->\n\t\t\t\t\tdeps = ['axios']\n\t\t\t\t\tthisis = this.is\n\t\t\t\t\tfor dep in deps\n\t\t\t\t\t\tdo (dep)->\n\t\t\t\t\t\t\tif typeof window[dep] is 'undefined'\n\t\t\t\t\t\t\t\tconsole.error thisis + ' polymer element needs ' + dep\n"],"file":"oj-calendar.html","sourceRoot":"/source/"}